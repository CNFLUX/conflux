#ifndef SCREENING
#define SCREENING

#include <vector>
#include <array>
using std::array;

namespace bsg {
namespace screening {

/**
 * Returns screening potential 'l' using calculation from:
 * Salvat et al., Physical Review A 36 (1987) 467-474
 * for Z <= 92. If Z is larger, the Moliere potential is used
 *
 * @param Z0 the proton number of the atom
 */
double Screening_l(int Z0) {

    Z0 = abs(Z0); // for Z < 0 if beta + transition

    static constexpr size_t Zmax = 92;

    // Moliere's potential (Eqn. 8)
    if (Z0 > Zmax) {
        double b = 0.88534 * std::pow(double(Z0), -1. / 3.);
        return 2 * ALPHA * (0.1 * 6.0 + 0.55 * 1.2 + 0.35 * 0.3) / b;
    }

    // l calculated from Table 1 parameters
    constexpr double Zl[Zmax+1] = {
        0,

        0.01461797, 0.02470278, 0.02868060, 0.03139973, 0.03393257,
        0.03645607, 0.03895929, 0.04143756, 0.04391049, 0.04635186,
        0.04801851, 0.04954157, 0.05095369, 0.05233685, 0.05369595,
        0.05503541, 0.05634500, 0.05766347, 0.05871963, 0.05970098,
        0.06082863, 0.06197333, 0.06307851, 0.06434708, 0.06538785,

        0.06650824, 0.06763325, 0.06879306, 0.07000021, 0.07101155,
        0.07197615, 0.07294586, 0.07390764, 0.07477370, 0.07571993,
        0.07659831, 0.07742765, 0.07825741, 0.07903608, 0.07991620,
        0.07499327, 0.08164900, 0.08241786, 0.08332470, 0.08417445,
        0.08506532, 0.08586405, 0.08666418, 0.08739237, 0.08820645,

        0.08899195, 0.08976137, 0.09050748, 0.09123726, 0.09200948,
        0.09272645, 0.09346417, 0.09428148, 0.09512618, 0.09603247,
        0.09687561, 0.09770459, 0.09857853, 0.09929465, 0.10028376,
        0.10118918, 0.10207096, 0.10293930, 0.10380518, 0.10477912,
        0.10561855, 0.10650533, 0.10735403, 0.10815565, 0.10912741,

        0.11003806, 0.11085113, 0.11185577, 0.11279111, 0.11372449,
        0.11461485, 0.11555807, 0.11648805, 0.11743520, 0.11837622,
        0.11922752, 0.12031102, 0.12126873, 0.12227182, 0.12316568,
        0.12437783, 0.12547328
    };

    return Zl[Z0];
}

/// Salvat et. al. Table 1 A_i[Z = 0 ... 92]
constexpr array<double, 3> Salvat_Ai[93] = {
    {0., 0., 0.},
    {-184.3900, 185.3900, 0.0000},
    {-0.2259, 1.2259, 0.0000},
    {0.6045, 0.3955, 0.0000},
    {0.3278, 0.6722, 0.0000},
    {0.2327, 0.7673, 0.0000},
    {0.1537, 0.8463, 0.0000},
    {0.0996, 0.9004, 0.0000},
    {0.0625, 0.9375, 0.0000},
    {0.0368, 0.9632, 0.0000},
    {0.0188, 0.9812, 0.0000},
    {0.7444, 0.2556, 0.0000},
    {0.6423, 0.3577, 0.0000},
    {0.6002, 0.3998, 0.0000},
    {0.5160, 0.4840, 0.0000},
    {0.4387, 0.5613, 0.0000},
    {0.5459, -0.5333, 0.9874},
    {0.7249, -0.7548, 1.0299},
    {2.1912, -2.2852, 1.0940},
    {0.0486, 0.7759, 0.1755},
    {0.5800, 0.4200, 0.0000},
    {0.5543, 0.4457, 0.0000},
    {0.0112, 0.6832, 0.3056},
    {0.0318, 0.6753, 0.2929},
    {0.1075, 0.7162, 0.1763},
    {0.0498, 0.6866, 0.2636},
    {0.0512, 0.6995, 0.2493},
    {0.0500, 0.7142, 0.2358},
    {0.0474, 0.7294, 0.2232},
    {0.0771, 0.7951, 0.1278},
    {0.0400, 0.7590, 0.2010},
    {0.1083, 0.7489, 0.1428},
    {0.0610, 0.7157, 0.2233},
    {0.0212, 0.6709, 0.3079},
    {0.4836, 0.5164, 0.0000},
    {0.4504, 0.5496, 0.0000},
    {0.4190, 0.5810, 0.0000},
    {0.1734, 0.7253, 0.1013},
    {0.0336, 0.7816, 0.1848},
    {0.0689, 0.7202, 0.2109},
    {0.1176, 0.6581, 0.2243},
    {0.2257, 0.5821, 0.1922},
    {0.2693, 0.5763, 0.1544},
    {0.2201, 0.5618, 0.2181},
    {0.2751, 0.5943, 0.1306},
    {0.2711, 0.6119, 0.1170},
    {0.2784, 0.6067, 0.1149},
    {0.2562, 0.6505, 0.0933},
    {0.2271, 0.6155, 0.1574},
    {0.2492, 0.6440, 0.1068},
    {0.2153, 0.6115, 0.1732},
    {0.1806, 0.5767, 0.2427},
    {0.1308, 0.5504, 0.3188},
    {0.0588, 0.5482, 0.3930},
    {0.4451, 0.5549, 0.0000},
    {0.2708, 0.6524, 0.0768},
    {0.1728, 0.6845, 0.1427},
    {0.1947, 0.6384, 0.1669},
    {0.1913, 0.6467, 0.1620},
    {0.1868, 0.6558, 0.1574},
    {0.1665, 0.7057, 0.1278},
    {0.1624, 0.7133, 0.1243},
    {0.1580, 0.7210, 0.1210},
    {0.1538, 0.7284, 0.1178},
    {0.1587, 0.7024, 0.1389},
    {0.1453, 0.7426, 0.1121},
    {0.1413, 0.7494, 0.1093},
    {0.1374, 0.7558, 0.1068},
    {0.1336, 0.7619, 0.1045},
    {0.1299, 0.7680, 0.1021},
    {0.1267, 0.7734, 0.0999},
    {0.1288, 0.7528, 0.1184},
    {0.1303, 0.7324, 0.1373},
    {0.1384, 0.7096, 0.1520},
    {0.1500, 0.6871, 0.1629},
    {0.1608, 0.6659, 0.1733},
    {0.1722, 0.6468, 0.1810},
    {0.1834, 0.6306, 0.1860},
    {0.2230, 0.6176, 0.1594},
    {0.2289, 0.6114, 0.1597},
    {0.2098, 0.6004, 0.1898},
    {0.2708, 0.6428, 0.0864},
    {0.2380, 0.6308, 0.1312},
    {0.2288, 0.6220, 0.1492},
    {0.1941, 0.6105, 0.1954},
    {0.1500, 0.6031, 0.2469},
    {0.0955, 0.6060, 0.2985},
    {0.3192, 0.6233, 0.0575},
    {0.2404, 0.6567, 0.1029},
    {0.2266, 0.6422, 0.1312},
    {0.2176, 0.6240, 0.1584},
    {0.2413, 0.6304, 0.1283},
    {0.2448, 0.6298, 0.1254}
};

/// Salvat et. al. Table 1 alpha_i[Z = 0 ... 92]
constexpr array<double, 3> Salvat_alphai[93] = {
    {0., 0., 0.},
    {2.0027, 1.9973, 0.0000},
    {5.5272, 2.3992, 0.0000},
    {2.8174, 0.6625, 0.0000},
    {4.5430, 0.9852, 0.0000},
    {5.9900, 1.2135, 0.0000},
    {8.0404, 1.4913, 0.0000},
    {10.8120, 1.7687, 0.0000},
    {14.8230, 2.0403, 0.0000},
    {21.4000, 2.3060, 0.0000},
    {34.9990, 2.5662, 0.0000},
    {4.1205, 0.8718, 0.0000},
    {4.7266, 1.0025, 0.0000},
    {5.1405, 1.0153, 0.0000},
    {5.8492, 1.1732, 0.0000},
    {6.6707, 1.3410, 0.0000},
    {6.3703, 2.5517, 1.6753},
    {6.2118, 3.3883, 1.8596},
    {5.5470, 4.5687, 2.0446},
    {30.2600, 3.1243, 0.7326},
    {6.3218, 1.0094, 0.0000},
    {6.6328, 1.1023, 0.0000},
    {99.7570, 4.1286, 1.0090},
    {42.5330, 3.9404, 1.0533},
    {18.9590, 3.0638, 1.0014},
    {31.8640, 3.7811, 1.1279},
    {31.8250, 3.7716, 1.1606},
    {32.9150, 3.7908, 1.1915},
    {34.7580, 3.8299, 1.2209},
    {25.3260, 3.3928, 1.1426},
    {40.3430, 3.9465, 1.2759},
    {20.1920, 3.4733, 1.0064},
    {29.2000, 4.1252, 1.1845},
    {62.4870, 4.9502, 1.3582},
    {8.7824, 1.6967, 0.0000},
    {9.3348, 1.7900, 0.0000},
    {9.9142, 1.8835, 0.0000},
    {17.1660, 3.1103, 0.7177},
    {55.2080, 4.2842, 0.8578},
    {31.3660, 4.2412, 0.9472},
    {22.0540, 4.0325, 1.0181},
    {14.2400, 2.9702, 1.0170},
    {14.0440, 2.8611, 1.0591},
    {15.9180, 3.3672, 1.1548},
    {14.3140, 2.7370, 1.1092},
    {14.6540, 2.7183, 1.1234},
    {14.6450, 2.6155, 1.4318},
    {15.5880, 2.7412, 1.1408},
    {16.9140, 3.0841, 1.2619},
    {16.1550, 2.8819, 0.9942},
    {17.7930, 3.2937, 1.1478},
    {19.8750, 3.8092, 1.2829},
    {24.1540, 4.6119, 1.4195},
    {39.9960, 5.9132, 1.5471},
    {11.8050, 1.7967, 0.0000},
    {16.5910, 2.6964, 0.6814},
    {22.3970, 3.4595, 0.8073},
    {20.7640, 3.4657, 0.8911},
    {21.2350, 3.4819, 0.9011},
    {21.8030, 3.5098, 0.9106},
    {23.9490, 3.5199, 0.8486},
    {24.5980, 3.5560, 0.8569},
    {25.2970, 3.5963, 0.8650},
    {26.0170, 3.6383, 0.8731},
    {25.4970, 3.7364, 0.9550},
    {27.5470, 3.7288, 0.8890},
    {28.3460, 3.7763, 0.8969},
    {29.1600, 3.8244, 0.9048},
    {29.9900, 3.8734, 0.9128},
    {30.8350, 3.9233, 0.9203},
    {31.6810, 3.9727, 0.9288},
    {31.3530, 4.0904, 1.0072},
    {31.2170, 4.2049, 1.0946},
    {30.0770, 4.2492, 1.1697},
    {28.6300, 4.2426, 1.2340},
    {27.5680, 4.2341, 1.2970},
    {26.5860, 4.1999, 1.3535},
    {25.7340, 4.1462, 1.4037},
    {22.9940, 3.7346, 1.4428},
    {22.8640, 3.6914, 1.4886},
    {24.4080, 3.9643, 1.5343},
    {20.9410, 3.2456, 1.1121},
    {22.9870, 3.6217, 1.2373},
    {23.7920, 3.7796, 1.2534},
    {26.6950, 4.2582, 1.3577},
    {31.8400, 4.9285, 1.4683},
    {43.4890, 5.8520, 1.5736},
    {20.0150, 2.9091, 0.7207},
    {24.5010, 3.5524, 0.8376},
    {25.6840, 3.7922, 0.9335},
    {26.5540, 4.0044, 1.0238},
    {25.1930, 3.6780, 0.9699},
    {25.2520, 3.6397, 0.9825}
};


}
}

#endif
